昨日回顾：
    1、什么是编程语言
        人与机器之间沟通的介质

    2、什么是编程
        人类把自己的思维逻辑和想法转化机器能看懂的语言
        让机器帮你工作

        编程最终的结果就是一堆文件

    3、为什么要编程
        解放人力


    一套完整的计算系统：
        应用程序
        操作系统
        计算机硬件

    计算机的五大组成部分：
        1、控制器
        2、运算器：
            逻辑运算
            算数运算
                1 + 1
        控制器 + 运算器 = 中央处理器（cpu）

        3、存储器
            内存（基于电工作）
                优点：存取速度快
                缺点：断电数据丢失
            外存（硬盘）
                优点：可以永久存储数据
                缺点：存取速度慢
        4、输入设备：键盘、鼠标、麦克风

        5、输出设备：显示器、打印机、、

    你学习通过输入设备（耳朵、眼睛），传到临时存储（内存），
    输出设备（写作业）

    cpu：
        （01010101）
        x86:32位操作系统
        x64:64位操作系统
        向下兼容性
    存储器：
        寄存器：cpu即将要用到数据

        高级缓存：用于临时存储数据量较小的数据

        内存：临时存储数据的主力

        硬盘：
            凹凸凹凸凹凸凹凸凹凸凹凸
            机械硬盘：
                基于磁道存储数据
            固态硬盘：
                基于电容存储

    操作系统：
        将丑陋的、复杂的计算机硬件操作转换成简便的、快捷方式
        用于管理、组织、协调、调度计算机硬件的使用

        BIOS

    什么是文件？
        就是操作系统提供给你操作硬盘的一种方式


今日内容：
    1、编程语言的发展史：
        计算机是基于电工作
        （基于高、低电平）
        1010010101011
        1、机器语言
            优点：执行速度够快
            缺点：开发效率非常低
        2、汇编语言（通过英文字符组成）
            优点：执行效率相较于机器语言略低
            缺点：开发效率相较于机器语言略高
        ; hello.asm
        section .data            ; 数据段声明
                msg db "Hello, world!", 0xA     ; 要输出的字符串
                len equ $ - msg                 ; 字串长度
                section .text            ; 代码段声明
                global _start            ; 指定入口函数
                _start:                  ; 在屏幕上显示一个字符串
                mov edx, len     ; 参数三：字符串长度
                mov ecx, msg     ; 参数二：要显示的字符串
                mov ebx, 1       ; 参数一：文件描述符(stdout)
                mov eax, 4       ; 系统调用号(sys_write)
                int 0x80         ; 调用内核功能
                                 ; 退出程序
                mov ebx, 0       ; 参数一：退出代码
                mov eax, 1       ; 系统调用号(sys_exit)
                int 0x80         ; 调用内核功能
        3、高级语言
            c、c++、c#、java、php、python、go
            优点：开发效率高
            缺点：执行效率低
            编译型：谷歌翻译
                c、c++、go
            解释型：同声传译
               c#、python、java（先编译后解释）
        开发效率：
            （解释型>编译型）>汇编语言>机器语言

        执行效率：
            （解释型<编译型）<汇编语言<机器语言

        跨平台：
            解释型>编译型

        学习难度：
            机器语言>汇编语言>高级语言

    python解释器
        IT行业的定律：一定不要下载最新版本
        python版本分类：
            python2.x

            python3.x

    python执行代码的两种方式：
        1、交互式：
            有来有往
        2、命令行执行
            python文件约定俗成将后缀名定义为.py
            其实.py单纯的就是文本文件

    胶水语言


    IDE工具pycharm：
        专门用于编写python代码

        优点：
            提升开发效率
        缺点：
            比较占用内存的资源


    注释：
       注释是代码之母
        程序员最烦的两件事：
            同事不写注释
            自己要写注释

        单行注释：
            #
            快捷键：ctrl+？
        多行注释：
            """
            """

            '''
            '''

    变量：
        1、什么是变量？
            变：事物的状态是可以变化的
            量：描述事物的状态
        2、没有变量行不行？
            不行

        3、怎么用变量？
            1、变量名
            2、赋值符号
            3、变量值

        变量名的命名规范：
            1、只能由字母、数字、下划线组成
            2、不能用中文（用了第二天人就没了）
            3、不能以数字开头
            4、区分一下大小写

        变量名的命名风格：
            1、驼峰体
                UserAge = 18
                print(UserAge)
            2、下划线体
                user_age = 18
                print(user_age)

        变量的三大特性：
            值：value
            内存地址：id
            变量的类型：type


        常量：
            Python中压根没有常量

            NAME = 'SEAN'
            HOST = '127.0.0.1'
            python程序员约定俗成将字母全部大写的变量就定义为常量


        内存管理：
            小整数池：
            >>> a = 257
            >>> b = 257
            >>> print(id(a))
            2335729820784
            >>> print(id(b))
            2335761804048
            >>> a = 255
            >>> b = 255
            >>>
            >>> print(id(a))
            1838517664
            >>> print(id(b))
            1838517664

            垃圾回收机制：
            a = 10
            a = 11
            1、引用计数：当内存中的值引用计数为0，垃圾回收机制就会自动清除
            2、标记清除：当应用程序将内存撑满的时候，会自动停止，清除垃圾
            3、分代回收：













