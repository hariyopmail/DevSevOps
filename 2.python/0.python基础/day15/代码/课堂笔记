昨日回顾:
    1.map,reduce,filter
        map: 映射
        map(函数地址, 可迭代对象)
        将可迭代对象中的值遍历取出，并且按照指定的规则映射出新的map对象。
        调用返回的是map对象。

        reduce: 合并
        reduce(函数地址, 可迭代对象, 初始值)
        将可迭代对象中的值两两合并，并且可以设置初始值
        return 合并后的值

        filter: 过滤
        filter(函数地址, 可迭代对象)
        将可迭代对象中的值遍历取出，然后通过判断，若条件成立 “过滤获取” 对应的值。
        并将获取的值放到一个filter对象中。
        return filter对象

    2.函数递归
        函数重复 “直接或间接” 调用函数本身，会进入死循环。

        缺点:
            1.毫无意义
            2.内存溢出


        有意义的递归:
            - 递推:
                指的是重复地执行, 每一次执行都要拿到一个更接近于结果的结果，
                递推必要有一个终止条件。

            - 回溯:
                当递推找到一个终止条件后，开始一步一步往上回溯，最终得到一个结果。

            age(5) = age(4) + 2
            age(4) = age(3) + 2
            age(3) = age(2) + 2
            age(2) = age(1) + 2
            age(1) = 80

    3.模块
        模块是一系列功能代码的结合体。
        - 模块的三种来源:
            1.python内置的 （python解释器，拿来用）
            2.第三方的（别人写，拿来用）
            3.自定义的（自己写，自己用，给别人用）

        - 模块的四种表现形式:
            1.使用python代码写的py文件（了解）
            2.编译后的共享库DLL或者是C或者C++库（了解）
            3.包下面带有__init__.py的一组py文件
                - 包
                    - __init__.py
                    - 模块1.py
                    - 模块2.py
            4.python解释器提供的内置py文件

        - 导入模块发生的事情
            1.先执行当前执行文件，会产生当前执行文件的名称空间
            2.加载被导入模块时，会执行被导入模块代码，会产生被导入模块中名称空间
            3.将被导入模块中的名称空间加载到内存中

        - 首次导入模块
            只会加载一次，将加载后的模块的名称空间放入内存中，
            下次获取名字时优先从内存中获取。
            import demo
            import demo

        - 给模块起别名
            import 模块 as 模块的别名

        - 模块的两种导入方式
            import 模块名  (不能加.py后缀)
            from 包/模块 import 模块/模块中的名字(函数名或变量名)

        - 解决循环导入问题的两种方式
            - 在名字定义后导入模块
            - 在函数内部导入模块，让被导入的模块加载到局部名称空间中。

    4.包:
        包是内部有__init__.py的文件夹，用于管理模块。

    5.软件开发目录规范
        - 项目的根目录: ATM
            - conf: 存放配置文件
            - core: 存放py文件，核心业务
            - interface: 接口，做逻辑处理
            - db: 存放数据的   文件
            - log: 存放日志文件
            - lib: 存放公共方法文件
            - bin: 存放启动py文件
            - readme: 项目说明书
            - 不要bin目录，在外层添加启动文件


今日内容:
    - 常用的python内置模块

        1.time模块
            - 普通时间模块

        2.datetime模块
            - 基于time模块封装更高级的时间模块

        3.random模块
            - 随机模块

        4.os模块
            - 与操作系统交互的模块

        5.sys模块
            - 与python解释器交互的模块

        6.hashlib
            - 加密模块
            - 明文密码: 123 ---> 123
            - 密文密码: 123 ---> wahoqh21ohrui21hr09s7df9usar

        7.序列化模块
            - json
            - pickle